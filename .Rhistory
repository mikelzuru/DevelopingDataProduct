p <- ggplot(plotData, aes(y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE)
p + geom_bar(aes(x=names), stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = 'free_x')
p + geom_bar(aes(x=names), stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = "free_x"")
p <- ggplot(plotData, aes(y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p <- ggplot(plotData, aes(y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(aes(x=names), stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(aes(x=names), stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names)) + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
plotData
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names))# + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names))# + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names))# + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types")
p <- ggplot(plotData, aes(x=names,y=DAMAGE,col=names))# + facet_wrap(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(.~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(DAMAGE_TYPE~.,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_wrap(DAMAGE_TYPE~.,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_wrap(DAMAGE_TYPE~,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_wrap(~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(~DAMAGE_TYPE,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(DAMAGE_TYPE~,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(DAMAGE_TYPE~.,scales = "free_x")
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="Property damage ($)") + scale_colour_discrete(name="Event types") + facet_grid(DAMAGE_TYPE~.,scales = "free_y")
eventsSum
eventsSum[order(FATALITIES,decreasing=TRUE)]
eventsSum[order(FATALITIES,decreasing=TRUE),EVTYPE]
head(eventsSum[order(FATALITIES,decreasing=TRUE),c(EVTYPE,FATALITIES)])
fatalities_DT <- data.table(eventsSum[,c(1,2)])
fatalities_DT
head(eventsSum)
head(eventsSum[,c(1,2)])
head(eventsSum[,c(EVTYPE,FATALITIES)])
head(eventsSum[,c("EVTYPE","FATALITIES")])
head(eventsSum[,EVTYPE])
head(eventsSum[,EVTYPE,FATALITIES])
head(eventsSum[,EVTYPE,FATALITIES,INJURIES])
head(eventsSum[,])
head(eventsSum)
eventsSum[order(FATALITIES,decreasing=TRUE)]
eventsSum[order(FATALITIES,decreasing=TRUE)][1]
eventsSum[order(FATALITIES,decreasing=TRUE),1]
fatalities_DT <- data.table(eventsSum)
fatalities_DT[,INJURIES:=NULL]
fatalities_DT <- head(fatalities_DT[order(FATALITIES,decreasing=TRUE)],20)
fatalities_DT$NAME_F <- "Fatalities"
injuries_DT <- data.table(eventsSum)
injuries_DT[,FATALITIES:=NULL]
injuries_DT <- head(injuries_DT[order(INJURIES,decreasing=TRUE)],20)
injuries_DT$NAME_I <- "Injuries"
dflist <- list(fatalities_DT,injuries_DT$NAME_I)
harm_DT <- join_all(dflist,type="inner")
harm_DT_AUX <- data.table(harm_DT)
harm_DT_AUX[,FATALITIES:=INJURIES]
harm_DT_AUX[,NAME_F:=NAME_I]
harm_DT <- rbind(harm_DT,harm_DT_AUX)
setnames(harm_DT,"FATALITIES","HARM")
setnames(harm_DT,"NAME_F","HARM_TYPE")
harm_DT[,INJURIES:=NULL]
harm_DT[,NAME_I:=NULL]
dflist <- list(fatalities_DT,injuries_DT)
harm_DT <- join_all(dflist,type="inner")
harm_DT_AUX <- data.table(harm_DT)
harm_DT_AUX[,FATALITIES:=INJURIES]
harm_DT_AUX[,NAME_F:=NAME_I]
harm_DT <- rbind(harm_DT,harm_DT_AUX)
setnames(harm_DT,"FATALITIES","HARM")
setnames(harm_DT,"NAME_F","HARM_TYPE")
harm_DT[,INJURIES:=NULL]
harm_DT[,NAME_I:=NULL]
plotData <- harm_DT
plotData$names <- factor(plotData$EVTYPE, as.character(plotData$EVTYPE))
plot.title <- "Total fatalities and injuries (# of people)"
plot.subtitle <- "by event type"
p <- ggplot(plotData, aes(x=names,y=HARM,col=names))
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="# of people") + scale_colour_discrete(name="Event types") + facet_grid(DAMAGE_TYPE~.,scales = "free_y")
harm_DT
p + geom_bar(stat="identity") + ggtitle(bquote(atop(.(plot.title), atop(italic(.(plot.subtitle)), "")))) + theme(axis.ticks.x = element_blank(), axis.text.x = element_blank()) + labs(x="Event types",y="# of people") + scale_colour_discrete(name="Event types") + facet_grid(HARM_TYPE~.,scales = "free_y")
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
emissionSum <- tapply(NEI$Emissions,NEI$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot1.png")
dev.off()
## This first line will likely take a few seconds. Be patient!
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
emissionSum <- tapply(NEI$Emissions,NEI$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot1.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreData <- NEI[baltimore,]
emissionSum <- tapply(baltimoreData$Emissions,baltimoreData$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot1.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreDT <- data.table(NEI[baltimore,4:6])
emissionSum <- baltimoreDT[,lapply(.SD,sum),by='type,year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)")
dev.copy(png,"plot1.png")
dev.off()
coalSources <- SCC[grepl("Coal",SCC$EI.Sector),]$SCC
coalIndex <- which(coalSources == NEI$SCC)
coalDT <- data.table(NEI[coalIndex,4:6])
coalDT[,type:=NULL]
emissionSum <- coalDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM\n(Coal combustion-related sources)",xlab="Year",ylab="Amount of PM emitted (tons)",col=year)
dev.copy(png,"plot1.png")
dev.off()
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
baltimore <- NEI$fips == "24510"
baltimoreDT <- NEI[baltimore,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,4:6])
vehicleDT[,type:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
dev.copy(png,"plot1.png")
dev.off()
library(data.table)
library(ggplot2)
library(plyr)
baltimore <- NEI$fips == "24510"
baltimoreData <- NEI[baltimore,]
emissionSum <- tapply(baltimoreData$Emissions,baltimoreData$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot1.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreDT <- data.table(NEI[baltimore,4:6])
emissionSum <- baltimoreDT[,lapply(.SD,sum),by='type,year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)")
dev.copy(png,"plot1.png")
dev.off()
coalSources <- SCC[grepl("Coal",SCC$EI.Sector),]$SCC
coalIndex <- which(coalSources == NEI$SCC)
coalDT <- data.table(NEI[coalIndex,4:6])
coalDT[,type:=NULL]
emissionSum <- coalDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM\n(Coal combustion-related sources)",xlab="Year",ylab="Amount of PM emitted (tons)",col=year)
dev.copy(png,"plot1.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreDT <- NEI[baltimore,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,4:6])
vehicleDT[,type:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
dev.copy(png,"plot1.png")
dev.off()
baltAndLA <- NEI$fips == "24510" | NEI$fips == "06037"
baltAndLA <- NEI[baltAndLA,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltAndLA,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,1:6])
vehicleDT[,type:=NULL]
vehicleDT[,SCC:=NULL]
vehicleDT[,Pollutant:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='fips,year']
emissionSum[,year:=as.character(year)]
baltIndex <- emissionSum$fips == "24510"
laIndex <- !baltIndex
emissionSum[baltIndex,place:="Baltimore City"]
emissionSum[laIndex,place:="Los Angeles Country"]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,facets=.~place,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
dev.copy(png,"plot1.png")
dev.off()
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year") + facet_grid(.~place,scales = "free_y")
baltAndLA <- NEI$fips == "24510" | NEI$fips == "06037"
baltAndLA <- NEI[baltAndLA,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltAndLA,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,1:6])
vehicleDT[,type:=NULL]
vehicleDT[,SCC:=NULL]
vehicleDT[,Pollutant:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='fips,year']
emissionSum[,year:=as.character(year)]
baltIndex <- emissionSum$fips == "24510"
laIndex <- !baltIndex
emissionSum[baltIndex,place:="Baltimore City"]
emissionSum[laIndex,place:="Los Angeles Country"]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,facets=.~place,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
dev.copy(png,"plot6.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreDT <- NEI[baltimore,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,4:6])
vehicleDT[,type:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
dev.copy(png,"plot5.png")
dev.off()
coalSources <- SCC[grepl("Coal",SCC$EI.Sector),]$SCC
coalIndex <- which(coalSources == NEI$SCC)
coalDT <- data.table(NEI[coalIndex,4:6])
coalDT[,type:=NULL]
emissionSum <- coalDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
par(mfrow=c(1,1))
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM\n(Coal combustion-related sources)",xlab="Year",ylab="Amount of PM emitted (tons)",col=year)
dev.copy(png,"plot4.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreDT <- data.table(NEI[baltimore,4:6])
emissionSum <- baltimoreDT[,lapply(.SD,sum),by='type,year']
emissionSum[,year:=as.character(year)]
#qplot(year,Emissions,data=emissionSum,facets= type ~.,geom="bar",stat="identity",position="dodge")
#qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge")
par(mfrow=c(1,1))
qplot(year,Emissions, fill=type,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)")
dev.copy(png,"plot3.png")
dev.off()
baltimore <- NEI$fips == "24510"
baltimoreData <- NEI[baltimore,]
emissionSum <- tapply(baltimoreData$Emissions,baltimoreData$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM in the\nBaltimore City, Maryland per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot2.png")
dev.off()
emissionSum <- tapply(NEI$Emissions,NEI$year,sum)
par(mfrow=c(1,1))
barplot(emissionSum,main="Total emissions from PM per year",xlab="Year",ylab="Amount of PM emitted (tons)",col="red")
dev.copy(png,"plot1.png")
dev.off()
0.1/(0.4/sqrt(100))
qnorm(0.95)
qnorm(0.95) - 2-5
pnorm(qnorm(0.95) - 2-5)
pnorm(qnorm(0.95) - 2.5)
-0.1/(0.4/sqrt(100))
pnorm(qnorm(0.95) + 2.5)
qnorm(0.9)
(0.4/(0.1/1.644854))^2
0.1/(0.4/sqrt(43))
qnorm(0.1/(0.4/sqrt(43)))
pnorm(0.1/(0.4/sqrt(43)))
pnorm(0.1/(0.4/sqrt(44)))
md <- 44 - 42.04
n1 <- 288
n2 <- 288
sp <- sqrt(((n1-1) * 12^2 + (n2-1) * 12^2)/(n1+n2 - 2))
semd <- sp * sqrt(1/n1 + 1/n2)
md/semd
pnorm(1.96)
qnorm(0.9)
(0.4/(0.1/qnorm(0.9)))^2
pnorm(-1.96)
t.test(x1, x2, paired = FALSE, var.equal = TRUE)$conf
x1 <- 44
x2 <- 42.04
t.test(x1, x2, paired = FALSE, var.equal = TRUE)$conf
t.test(x1, x2, paired = TRUE, var.equal = TRUE)$conf
?rnorm
rnorm(2,44,12)
x1 <- rnorm(288,44,12)
x2 <- rnorm(288,42.04,12)
t.test(x1, x2, paired = TRUE, var.equal = TRUE)$conf
t.test(x1, x2, paired = TRUE, var.equal = TRUE)
(0.4/(0.1/qnorm(0.1)))^2
(0.4/(0.1/qnorm(0.9)))^2
power.t.test(power = 0.9, delta = 2/4, sd = 12, type = "one.sample", alt = "one.sided")
power.t.test(power = 0.9, delta = 0.1, sd = 0.4, type = "one.sample", alt = "one.sided")
?power.t.test
power.t.test(n = 100, delta = 0.1, sd = 0.4, type = "one.sample", alt = "one.sided")
0.01/(0.04/sqrt(100))
10/0.4
10/0.04
1/0.4
sqrt(100)*0.01/0.04
qnorm(0.95)
qnorm(0.05)
pnorm(qnorm(0.95) - 2.5)
pnorm(qnorm(0.95) - 2.5,lower.tail=FALSE)
sqrt(26)*0.01/0.04
pnorm(sqrt(26)*0.01/0.04)
pnorm(sqrt(27)*0.01/0.04)
pnorm(sqrt(27)*0.01/0.04,lower.tail=FALSE)
pnorm(sqrt(70)*0.01/0.04,lower.tail=FALSE)
pnorm(sqrt(100)*0.01/0.04,lower.tail=FALSE)
pnorm(sqrt(10)*0.01/0.04,lower.tail=FALSE)
pnorm(sqrt(1)*0.01/0.04,lower.tail=FALSE)
qnorm(0.95) - 2.5
pnorm(-1,lower.tail=FALSE)
qnorm(0.9,lower.tail=FALSE)
qnorm(0.9,lower.tail=FALSE) + 1.644854
qnorm(0.9,lower.tail=FALSE) - 1.644854
(0.4/(0.1/2.926406))^2
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
m <- mean(x)
min(w*((x-m)^2))
w*((x-m)^2)
((x-m)^2)
sum(w*((x-m)^2))
m
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
m y P l o t   < -   f u n c t i o n ( b e t a ) {
y   < -   g a l t o n $ c h i l d   -   m e a n ( g a l t o n $ c h i l d )
x   < -   g a l t o n $ p a r e n t   -   m e a n ( g a l t o n $ p a r e n t )
f r e q D a t a   < -   a s . d a t a . f r a m e ( t a b l e ( x ,   y ) )
n a m e s ( f r e q D a t a )   < -   c ( " c h i l d " ,   " p a r e n t " ,   " f r e q " )
p l o t (
a s . n u m e r i c ( a s . v e c t o r ( f r e q D a t a $ p a r e n t ) ) ,
a s . n u m e r i c ( a s . v e c t o r ( f r e q D a t a $ c h i l d ) ) ,
p c h   =   2 1 ,   c o l   =   " b l a c k " ,   b g   =   " l i g h t b l u e " ,
c e x   =   . 1 5   *   f r e q D a t a $ f r e q ,
x l a b   =   " p a r e n t " ,
y l a b   =   " c h i l d "
)
a b l i n e ( 0 ,   b e t a ,   l w d   =   3 )
p o i n t s ( 0 ,   0 ,   c e x   =   2 ,   p c h   =   1 9 )
m s e   < -   m e a n (   ( y   -   b e t a   *   x ) ^ 2   )
t i t l e ( p a s t e ( " b e t a   =   " ,   b e t a ,   " m s e   =   " ,   r o u n d ( m s e ,   3 ) ) )
}
m a n i p u l a t e ( m y P l o t ( b e t a ) ,   b e t a   =   s l i d e r ( 0 . 6 ,   1 . 2 ,   s t e p   =   0 . 0 2 ) )
yMean <- y - mean(y)
xMean <- x - mean(x)
freqData <- as.data.frame(table(x,y))
freqData
names(freqData) <- c("child","parent","freq")
plot(as.numeric())
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = freqData)
class(freqData$child)
data$child <- freqData$child
data <- freqData
data$child <- as.numeric(freqData$child)
data$parent <- as.numeric(freqData$parent)
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = data)
child <- x
parent <- y
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1)
data(mtcars)
summary(mtcars)
attributes(mtcars)
child <- y
parent <- x
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1)
lm(I(child - mean(child))~ I(parent - mean(parent)) - 1, data = mtcars)
child mtcars$mpg
mtcars$mpg
lm(I(mpg - mean(mpg))~ I(wt - mean(mt)) - 1, data = mtcars)
lm(I(mpg - mean(mpg))~ I(wt - mean(wt)) - 1, data = mtcars)
0.4*1.6
0.4*1.5
x <- c(8.58, 10.46, 9.01, 9.64, 8.86)
sd(x)
zX <- (x - mean(x))/sd(x)
x
zX
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
cor(x,y)
sum(x*y)
cor(y,x)
cor(y,x)*sd(y)/sd(x)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
sum((0.8 - x)^2)
sum((0.573 - x)^2)
sum((0.36 - x)^2)
sum((0.44 - x)^2)
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
hist(x)
hist(x,breaks=100)
?slider
??slider
mean(x)
w*(x-0.3)^2
w*(x-0.0025)^2
sum(w*(x-0.0025)^2)
sum(w*(x-0.3)^2)
sum(w*(x-0.1471)^2)
sum(w*(x-0.1077)^2)
x <- c(0.8, 0.47, 0.51, 0.73, 0.36, 0.58, 0.57, 0.85, 0.44, 0.42)
y <- c(1.39, 0.72, 1.55, 0.48, 1.19, -1.59, 1.23, -0.65, 1.49, 0.05)
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc                             c(beta1, coef(lm(y ~ x))[2])
yc <- y - mean(y)
xc <- x - mean(x)
beta1 <- sum(yc * xc) / sum(xc^2)
c(beta1, coef(lm(y ~ x))[2])
sum(y*x)/sum(x^2)
cor(y,x)*sd(y)/sd(x)
beta1
0.99*0.001/(0.99*0.001 + 0.99*0.999)
library(manipulate)
myPlot <- function(s) {
plot(cars$dist - mean(cars$dist), cars$speed - mean(cars$speed))
abline(0, s)
}
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), slider = x(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot, s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), s = slider(0, 2, step = 0.1))
manipulate(myPlot(s), x.s = slider(0, 2, step = 0.1))
dTable(airquality, sPaginationType = "full_numbers")
install.packages("rCharts")
library(rCharts)
x
y
mean(y)
names(getModelList())
?train
library(cater)
library(caret)
?train
names(getModelInfo())
install.packages("rcharts")
install_github('rCharts', 'ramnathv')
library(devtools)
install_github('rCharts', 'ramnathv')
library(vcdExtra)
data(Baseball)
head(Baseball)
library(rCharts)
library(vcdExtra)
data(Baseball)
n1 <- nPlot(team86 ~ atbat86, group = 'league86', data = Baseball, type = 'scatterChart')
n1$addControls("x", "atbat86", names(Baseball))
n1$addControls("y", "team86", names(Baseball))
n1$print('chart1')
n1
cat(n1)
?randomForest
??randomForest
mean(c(0.003277 ,0.005421, 0.005500 ,0.004148 ,0.003313))
library(shiny)
setwd("D:/Mikel/Coursera/Data Scientist (Specialization)/Developing Data Products/Course Project")
runApp()
setwd("D:/Mikel/Coursera/Data Scientist (Specialization)/Developing Data Products/Slidify Project")
slidify()
library(slidify)
slidify()
slidify("slidifySlides.Rmd")
install.packages("googleVis")
library(Lahman)
data(BattingPost)
head(BattingPost)
library(googleVis)
?gvisMotionChart
library(vcdExtra)
data(Baseball)
head(Baseball)
?sample
sample(1:10,5)
sample(1:10,5)
set.seed(12)
sample(1:10,5)
sample(1:10,5)
set.seed(12)
sample(1:10,5)
slidify("slidifySlides.Rmd")
browseURL("slidifySlides.html")
library(vcdExtra)
data(Baseball)
head(Baseball)
table(Baseball$posit86)
head(Baseball)
