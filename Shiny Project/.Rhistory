dfList <- c(baltimoreDT,vehicleSources)
vehicleDT <- join_all(dfList)
class(vehicleSources)
class(baltimoreDT)
baltimore <- NEI$fips == "24510"
baltimoreDT <- NEI[baltimore,]
#data.frame bezela utzi
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
#hau ez badabil, JOIN bat egin bi DF artean
dfList <- c(baltimoreDT,vehicleSources)
vehicleDT <- join_all(dfList)
library(data.table)
library(ggplot2)
library(plyr)
NEI <- readRDS("summarySCC_PM25.rds")
SCC <- readRDS("Source_Classification_Code.rds")
baltimore <- NEI$fips == "24510"
baltimoreDT <- NEI[baltimore,]
class(baltimoreDT)
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
class(vehicleSources)
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- join_all(dfList)
head(vehicleDT)
vehicleDT$EI.Sector
unique(vehicleDT$EI.Sector)
?join_all
vehicleDT <- join_all(dfList,type="inner")
unique(vehicleDT$EI.Sector)
vehicleDT$EI.Sector
vehicleDT <- vehicleDT[vehicleIndex,4:6]
vehicleDT <- vehicleDT[,4:6]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
head(vehicleDT)
vehicleDT[,type:=NULL]
vehicleDT <- data.table(join_all(dfList,type="inner"))
vehicleDT <- vehicleDT[,4:6]
vehicleDT[,type:=NULL]
class(vehicleDT)
vehicleDT <- data.table(join_all(dfList,type="inner"))
class(vehicleDT)
head(vehicleDT)
vehicleDT <- vehicleDT[,4:6]
head(vehicleDT)
vehicleDT <- data.table(join_all(dfList,type="inner"))
head(vehicleDT[,4])
vehicleDT[,4]
class(vehicleDT)
head(vehicleDT$year)
vehicleDT <- data.table(join_all(dfList,type="inner")[,4:6])
head(vehicleDT)
vehicleDT[,type:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='year']
emissionSum[,year:=as.character(year)]
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM\nMotor vehicle sources",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
qplot(year,Emissions,data=emissionSum,geom="bar",stat="identity",position="dodge",main="Total emissions from PM from Motor vehicle sources",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
?qplot
baltAndLA <- NEI$fips == "24510" | NEI$fips == "06037"
baltAndLA <- NEI[baltAndLA,]
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,1:6])
head(vehicleDT)
vehicleDT[,type:=NULL]
vehicleDT[,SCC:=NULL]
vehicleDT[,Pollutant:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='fips,year']
emissionSum[,year:=as.character(year)]
baltIndex <- emissionSum$fips == "24510"
laIndex <- !baltIndex
emissionSum[baltIndex,place:="Baltimore City"]
emissionSum[laIndex,place:="Los Angeles Country"]
head(vehicleDT)
emissionSum$place <- ""
head(vehicleDT)
colnames(vehicleDT)
colnames(emissionSum)
head(emissionSum)
emissionSum[baltIndex,place:="Baltimore City"]
emissionSum[laIndex,place:="Los Angeles Country"]
head(emissionSum)
emissionSum
baltAndLA <- NEI$fips == "24510" | NEI$fips == "06037"
baltAndLA <- NEI[baltAndLA,]
head(baltAndLA)
unique(baltAndLA$fips)
o
vehicleSources <- SCC[grepl("Vehicle",SCC$EI.Sector),]
dfList <- list(baltimoreDT,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,1:6])
vehicleDT[,type:=NULL]
vehicleDT[,SCC:=NULL]
vehicleDT[,Pollutant:=NULL]
head(vehicleDT)
unique(vehicleDT$fips)
dfList <- list(baltAndLA,vehicleSources)
vehicleDT <- data.table(join_all(dfList,type="inner")[,1:6])
vehicleDT[,type:=NULL]
vehicleDT[,SCC:=NULL]
vehicleDT[,Pollutant:=NULL]
emissionSum <- vehicleDT[,lapply(.SD,sum),by='fips,year']
emissionSum[,year:=as.character(year)]
baltIndex <- emissionSum$fips == "24510"
laIndex <- !baltIndex
emissionSum$place <- "a"
emissionSum[baltIndex,place:="Baltimore City"]
emissionSum[laIndex,place:="Los Angeles Country"]
emissionSum
qplot(year,Emissions,data=emissionSum,facets=.~place,geom="bar",stat="identity",position="dodge",main="Total emissions from PM (Motor vehicle sources)",xlab="Year",ylab="Amount of PM emitted (tons)",sub="Baltimore City, Maryland per year")
qnorm(0.95)
1.644854 * 0.4 + 12
a <- c(140,138,150,148,135)
b <- (132,135,151,146,130)
b <- c(132,135,151,146,130)
mat <- data.frame(Baseline=a,Week2=b)
mat
mean1 <- mean(mat$Baseline)
mean2 <- mean(mat$Week2)
mean1
mean2
sd1 <- sd(mat$Baseline)
sd2 <- sd(mat$Week2)
sd1
sd2
g1 <- mat$Baseline
g2 <- mat$Week2
difference <- g2 - g1
mn <- mean(difference)
s <- sd(difference)
n <- 5
mn + c(-1,1) * qt(0.975,n-1) * s/sqrt(n)
difference
mn
mean1 - mean2
sd2-sd1
s
mn <- 1100
s <- 30
n <- 9
mn + c(-1,1) * qt(0.975,n-1) * s/sqrt(n)
mn <- 1100
s <- 30
n <- 9
mn + c(-1,1) * qt(0.95,n-1) * s/sqrt(n)
qnorm(0.95)
(1.645 * (4/10)) + 12
(1.645 * (4/10)) - 12
g1 <- mat$Baseline
g2 <- mat$Week2
difference <- g2 - g1
mn <- mean(difference)
s <- sd(difference)
n <- 5
mn/(sd/sqrt(n))
mn/(s/sqrt(n))
p <- mn/(s/sqrt(n))
pt(p)
pt(p,4)
t.test(difference)
t.test(difference)$conf.int
?pbinom
rep(0.2,5)
p <- rep(0.2,5)
pbinom(p,5)
pbinom(p,n=5)
pbinom(p,size=5)
pbinom(p=p,size=5)
pbinom(,p=p,size=5)
pnorm(0.95)
pnorm(1.645)
qnorm(0.95)
dbinom(2,4,0.25)
dbinom(1,2,0.5)
dbinom(1,3,0.5)
dbinom(1,3,1/3)
dbinom(1,4,0.25)
dbinom(1,4,0.01)
dbinom(2,4,0.25)
dbinom(3,4,0.25)
dbinom(3,4,0.5)
dbinom(2,4,0.5)
dbinom(4,4,0.5)
dbinom(5,4,0.5)
1/12
1/16
?dnorm
dnorm(50,100,1)
dnorm(50,100,25)
qnorm(50,1ç00,25)
qnorm(50,100,25)
qnorm(0.95,100,25)
pnorm(0.95,100,25)
dbinom(3,4,0.5)
dbinom(7,8,0.5)
pbinom(7,8,0.5)
pbinom(3,4,0.5)
dbinom(3,4,0.5)
dbinom(7,8,0.5)
pbinom(7,8,0.5)
pbinom(1,8,0.5)
pbinom(0,8,0.5)
pbinom(8,8,0.5)
dbinom(8,8,0.5)
pbinom(2,4,prob=0.5,lower.tail=FALSE)
sum(pbinom(3:4,4,prob=0.5,lower.tail=FALSE))
pbinom(3,4,prob=0.5,lower.tail=FALSE)
pbinom(4,4,prob=0.5,lower.tail=FALSE)
pbinom(4,4,prob=0.5)
pbinom(3,4,prob=0.5)
pbinom(3,4,prob=0.5,lower.tail=FALSE)
pbinom(4,4,prob=0.5,lower.tail=FALSE)
pbinom(3,4,prob=0.5,lower.tail=FALSE)
dbinom(3,4,prob=0.5,lower.tail=FALSE)
dbinom(3,4,prob=0.5)
dbinom(3,4,prob=0.5)
pbinom(3,4,prob=0.5)
pbinom(2,4,prob=0.5)
pbinom(1,4,prob=0.5)
dbinom(1,4,prob=0.5)
dbinom(2,4,prob=0.5)
sum(dbinom(0:3,4,prob=0.5))
pbinom(2,4,prob=0.5)
pbinom(2,4,prob=0.5,lower.tail=FALSE)
sum(dbinom(3:4,4,prob=0.5,lower.tail=FALSE))
sum(dbinom(3:4,4,prob=0.5))
9000/35
9000/35*31
pbinom(10,1787,prob=0.01)
ppois(9, 5, lower.tail = FALSE)
?ppois
ppois(11, 1787, lower.tail = FALSE)
ppois(11, 1787)
ppois(10, 1787)
ppois(10, 1787*0.01)
x1 <-
x2 <-
n1 <-
n2 <-
sp - sqrt(((n1 - 1) * sd(x1^  n-)*s(   m d   < -   m e a n ( x 1 )   -   m e a n ( x 2 )
s e m d   < -   s p   *   s q r t ( 1   /   n 1   +   1 / n 2 )
m d   +   c ( - 1 ,   1 )   *   q t ( . 9 7 5 ,   n 1   +   n 2   -   2 )   *   s e m d
x1 <- -3
x2 <- 1
n1 <- 9
n2 <- 9
sp <- sqrt( ((n1 - 1) * sd(x1)^2 + (n2-1) * sd(x2)^2) / (n1 + n2-2))
md <- -4
s e m d   < -   s p   *   s q r t ( 1        + 1/n2
semd <- sp * sqrt(1 / n1 + 1/n2
)
n1 <- 9
n2 <- 9
sp <- sqrt( ((n1 - 1) * sd(x1)^2 + (n2-1) * sd(x2)^2) / (n1 + n2-2))
x1 <- -3
x2 <- 1
sp <- sqrt( ((n1 - 1) * sd(x1)^2 + (n2-1) * sd(x2)^2) / (n1 + n2-2))
md <- x1 - x2
semd <- sp * sqrt(1 / n1 + 1/ n2)
md + c(-1, 1) * qt(.975, n1 + n2 - 2) * semd
sp <- sqrt( ((n1 - 1) * 1.5^2 + (n2-1) * 1.8^2) / (n1 + n2-2))
md + c(-1, 1) * qt(.95, n1 + n2 - 2) * semd
semd <- sp * sqrt(1 / n1 + 1/ n2)
md + c(-1, 1) * qt(.95, n1 + n2 - 2) * semd
s1 <- 1.5
s2 <- 1.8
df <- (s1^2/n1 + s2^2/n2) / ((s1^2/n1)^2/(n1-1)+((s2^2/n2)^2/(n2-1)))
df
df <- (s1^2/n1 + s2^2/n2) / ((s1^2/n1)^2/(n1-1)+((s2^2/n2)^2/(n2-1)))
df
s1 <- 15.34
s2 <- 18.23
n1 <- 8
n2 <- 21
df
df <- (s1^2/n1 + s2^2/n2) / ((s1^2/n1)^2/(n1-1)+((s2^2/n2)^2/(n2-1)))
df
s1 <- 1.5
s2 <- 1.8
n1 <- 9
n2 <- 9
m1
x1 - x2/semd
pt(x1 - x2/semd,n1 + n2 - 2)
43^2
43 / 10
43 % 10
??directory
list.files()
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=mysqlhost;database=mydbname;trusted_connection=true')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
install.packages("RODBC")
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=mysqlhost;database=mydbname;trusted_connection=true')
res <- sqlQuery(dbhandle, 'select * from information_schema.tables')
dbhandle <- odbcDriverConnect('driver={SQL Server};server=PROJECTS;database=SMARTUR;trusted_connection=true')
res <- sqlQuery(dbhandle, 'select DISTINCT(*) from GoogleNombresMunicipios')
res
res <- sqlQuery(dbhandle, 'select * from GoogleNombresMunicipios')
res
hotelak <- read.csv("MDP-hotels.csv",sep=",",header=TRUE)
hotelak <- read.csv("MDP-hoteles.csv",sep=",",header=TRUE)
hotelask
hotelak
sqlSave(dbhandle, hotelak, tablename = "HotelProba", append = FALSE)
?sqlSave
sqlSave(dbhandle, hotelak, tablename = "HotelProba", append = TRUE)
sqlSave(dbhandle, hotelak, tablename = "HotelProba2", append = FALSE)
class(hotelak$lat)
hotelak <- read.csv("MDP-hoteles.csv",sep=",",header=TRUE,stringsAsFactors=FALSE)
class(hotelak$lat)
hotelak$lat <- as.numeric(hotelak$lat)
hotelak$lat
hotelak$lon <- as.numeric(hotelak$lon)
sqlSave(dbhandle, hotelak, tablename = "HotelProba3", append = FALSE)
sqlSave(dbhandle, hotelak, tablename = "HotelProba3", append = TRUE)
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=PROJECTS;database=SMARTUR;trusted_connection=true')
res <- sqlQuery(dbhandle,'SELECT * FROM dbo.Split(''ÑLAKSDJFÑLK,ÑALSKDJFÑLKASDFJÑKL,ÑAKLSJDFÑKL'',',')')
res <- sqlQuery(dbhandle,'SELECT * FROM dbo.Split(\'ÑLAKSDJFÑLK,ÑALSKDJFÑLKASDFJÑKL,ÑAKLSJDFÑKL\',\',\')')
res
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=PROJECTS;database=CoMoTurismo;trusted_connection=true')
#res <- sqlQuery(dbhandle, 'select * from GoogleNombresMunicipios')
hotelak <- read.csv("MDP-hoteles.csv",sep=",",header=TRUE,stringsAsFactors=FALSE)
data <- hotelak[,c(1:2,4:5)]
colnames(data) <- c("idPunto","Nombre","Latitud","Longitud")
data$idPunto <- as.numeric(data$idPunto)
data$Latitud <- as.numeric(data$Latitud)
data$Longitud <- as.numeric(data$Longitud)
sqlSave(dbhandle, data, tablename = "Proc_LocalizacionesMunicipios_Temp2", append = FALSE)
sqlSave(dbhandle, data, tablename = "Proc_LocalizacionesMunicipios_Temp", append = FALSE)
sqlSave(dbhandle, data, tablename = "Proc_LocalizacionesMunicipios_Temp", append = TRUE)
res <- sqlQuery(dbhandle,'TRUNCATE TABLE Proc_LocalizacionesMunicipios_Temp')
sqlSave(dbhandle, data, tablename = "Proc_LocalizacionesMunicipios_Temp", append = TRUE)
res <- sqlQuery(dbhandle,'dbo.setCodigoMunicipioEuskadi()')
res
res <- sqlQuery(dbhandle,'EXEC dbo.setCodigoMunicipioEuskadi()')
res
res <- sqlQuery(dbhandle,'EXEC  [dbo].[setCodigoMunicipioEuskadi]')
res
res <- sqlQuery(dbhandle,'SELECT * FROM dbo.setCodigoMunicipioEuskadi()')
res
res <- sqlQuery(dbhandle,'SELECT * FROM dbo.getCodigoMunicipioEuskadi()')
res
write.csv("result.csv",sep=",",header=TRUE,stringsAsFactors=FALSE)
write.csv("result.csv",header=TRUE,stringsAsFactors=FALSE)
write.csv("result.csv")
?write.csv
resData <- sqlQuery(dbhandle,'SELECT * FROM dbo.getCodigoMunicipioEuskadi()')
write.csv(resData,"result.csv")
library(swirl)
install.packages("swirl")
library(swirl)
swirl()
0
exit
a
plot(child ~ parent, galton)
plot(jitter(child,4) ~
| parent,galton)
setwd("D:/Mikel/SmarTur/MoveEuskadi")
source('D:/Mikel/SmarTur/MoveEuskadi/scriptMoveEuskadi.R')
stopTimesData <- loadDirectoriesData("transporte moveuskadi","stop_times","txt")
index <- stopTimesData$trip_id == "4660"
stopTimesData[index,]
class(stopTimesData$stop_id)
grep("*.1",stopTimesData$stop_id)
ind <- grep("*.1",stopTimesData$stop_id)
head(stopTimesData[ind,])
ind <- grep(".",stopTimesData$stop_id)
head(stopTimesData[ind,])
size(ind)
length(ind)
ind <- grep("\.",stopTimesData$stop_id)
?grep
stopsData <- loadDirectoriesData("transporte moveuskadi","stops","txt")
ind <- grep("\.",stopsData$stop_id)
ind <- grep(".",stopsData$stop_id)
length(ind)
head(stopsData[ind,])
class(stopsData$stop_id)
met <- stopsData$custom_id == 33
stopsData[met,]
class(stopsData$custom_id)
class(stopsData$customId)
met <- stopsData$customId == 33
stopsData[met,]
met <- stopTimesData$customId == 33
head(stopTimesData[met,])
head(stopTimesData[met,],100)
table(stopTimesData$stop_id)
table(stopTimesData$stop_id[met])
stopTimesData$stop_id[met] <- paste(stopTimesData$stop_id[met],".0",sep="")
table(stopTimesData$stop_id[met])
library(RODBC)
dbhandle <- odbcDriverConnect('driver={SQL Server};server=PROJECTS;database=SMARTUR;trusted_connection=true')
sqlSave(dbhandle,stopTimesData,tablename="MoveEuskadiStopTimes")
table(stopTimesData$stop_lat)
table(stopsData$stop_lat)
table(stopsData$stop_lat/43)
3 % 4
3 / 4
mod(3,4)
3 %/% 4
6 %/% 4
table(stopsData$stop_lat%/%43)
ind <- stopsData$stop_lat%/%43 == 0
head(stopsData[ind,])
table(stopsData$stop_lat%/%42)
length(ind)
ind <- stopsData$stop_lat%/%43 == 0 & stopsData$stop_lat%/%42 == 1
length(ind)
ind <- stopsData$stop_lat%/%43 == 0
length(ind)
class(stopsData$stop_lat)
ind <- stopsData$stop_lat%/%43 == 1
length(ind)
ind <- 0
length(ind)
ind <- stopsData$stop_lat%/%43 == 0
length(ind)
head(stopsData[ind,])
head(stopsData[ind,],50)
class(stopsData$stop_lat)
class(stopsData$stop_lon)
library(AppliedPredictiveModeling)
data(segmentationOriginal)
library(caret)
indexTrain <- segmentationOriginal$Case == "Train"
indexTest <- segmentationOriginal$Case == "Test"
set.seed(125)
train <- segmentationOriginal[indexTrain,]
test <- segmentationOriginal[indexTest,]
colnames(train)
?train
modFit <- train(method="rpart",data=train)
table(train$Class)
modFit <- train(WS ~ .,method="rpart",data=train)
modFit <- train(Class ~ .,method="rpart",data=train)
install.packages("e1071")
modFit <- train(Class ~ .,method="rpart",data=train)
modFit
modFit$finalModel
ind1 <- test$TotalIntenCh2  == 23000 & test$FiberWidthCh1 == 10 & test$PerimStatusCh1 == 2
table(ind1)
proba <- test[1:4,]
proba[1,"TotalIntench2"]
head(proba)
proba[1,"TotalIntenCh2"]
proba[1,"TotalIntenCh2"] <- 23000
proba[2,"TotalIntenCh2"] <- 50000
proba[3,"TotalIntenCh2"] <- 57000
proba[1,"FiberWidthCh1"] <- 10
proba[2,"FiberWidthCh1"] <- 10
proba[3,"FiberWidthCh1"] <- 8
proba[4,"FiberWidthCh1"] <- 8
proba[1,"PerimStatusCh1"] <- 2
proba[4,"PerimStatusCh1"] <- 2
proba[2,"VarIntenCh4"] <- 100
proba[3,"VarIntenCh4"] <- 100
proba[4,"VarIntenCh4"] <- 100
predict(modFit,newdata=proba)
length(colnames(proba))
proba <- NA
head(proba)
proba <- test[1:4,]
proba[,] <- NA
head(proba)
proba[1,"TotalIntenCh2"] <- 23000
proba[2,"TotalIntenCh2"] <- 50000
proba[3,"TotalIntenCh2"] <- 57000
proba[1,"FiberWidthCh1"] <- 10
proba[2,"FiberWidthCh1"] <- 10
proba[3,"FiberWidthCh1"] <- 8
proba[4,"FiberWidthCh1"] <- 8
proba[1,"PerimStatusCh1"] <- 2
proba[4,"PerimStatusCh1"] <- 2
proba[2,"VarIntenCh4"] <- 100
proba[3,"VarIntenCh4"] <- 100
proba[4,"VarIntenCh4"] <- 100
predict(modFit,newdata=proba)
table(test$TotalIntenCh2)
proba[,] <- 0
proba[1,"TotalIntenCh2"] <- 23000
proba[2,"TotalIntenCh2"] <- 50000
proba[3,"TotalIntenCh2"] <- 57000
proba[1,"FiberWidthCh1"] <- 10
proba[2,"FiberWidthCh1"] <- 10
proba[3,"FiberWidthCh1"] <- 8
proba[4,"FiberWidthCh1"] <- 8
proba[1,"PerimStatusCh1"] <- 2
proba[4,"PerimStatusCh1"] <- 2
proba[2,"VarIntenCh4"] <- 100
proba[3,"VarIntenCh4"] <- 100
proba[4,"VarIntenCh4"] <- 100
predict(modFit,newdata=proba)
proba$Case <- ""
predict(modFit,newdata=proba)
proba$Case <- "Train"
predict(modFit,newdata=proba)
runApp()
library(shiny)
runApp()
setwd("D:/Coursera/Developing Data Products/Course Project")
runApp()
runApp()
runApp()
runApp()
colnames(galton)
